// <auto-generated />
using System;
using MailForward.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MailForward.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201001170210_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("MailForward.Data.Entities.AllowedSite", b =>
                {
                    b.Property<Guid>("IdAllowedSite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdOrigin")
                        .HasColumnType("TEXT");

                    b.Property<string>("Site")
                        .HasColumnType("TEXT");

                    b.HasKey("IdAllowedSite");

                    b.HasIndex("IdOrigin");

                    b.ToTable("AllowedSites");
                });

            modelBuilder.Entity("MailForward.Data.Entities.Destiny", b =>
                {
                    b.Property<Guid>("IdDestiny")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<Guid>("IdOrigin")
                        .HasColumnType("TEXT");

                    b.HasKey("IdDestiny");

                    b.HasIndex("IdOrigin");

                    b.ToTable("Destinies");
                });

            modelBuilder.Entity("MailForward.Data.Entities.MailAccount", b =>
                {
                    b.Property<Guid>("IdMailAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Mail")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Server")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<bool>("UseSSL")
                        .HasColumnType("INTEGER");

                    b.Property<string>("User")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("IdMailAccount");

                    b.ToTable("MailAccounts");
                });

            modelBuilder.Entity("MailForward.Data.Entities.Origin", b =>
                {
                    b.Property<Guid>("IdOrigin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdMailAccount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdOrigin");

                    b.HasIndex("IdMailAccount");

                    b.ToTable("Origin");
                });

            modelBuilder.Entity("MailForward.Data.Entities.AllowedSite", b =>
                {
                    b.HasOne("MailForward.Data.Entities.Origin", "Origin")
                        .WithMany("AllowedSites")
                        .HasForeignKey("IdOrigin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MailForward.Data.Entities.Destiny", b =>
                {
                    b.HasOne("MailForward.Data.Entities.Origin", "Origin")
                        .WithMany("Destinies")
                        .HasForeignKey("IdOrigin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MailForward.Data.Entities.Origin", b =>
                {
                    b.HasOne("MailForward.Data.Entities.MailAccount", "MailAccount")
                        .WithMany("Origins")
                        .HasForeignKey("IdMailAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
